name: "Homework 04 (gveditor)"

on:
  push:
    branches:
      - "hw04"

env:
  app_dir: "gveditor"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Doxygen Install
        run: sudo apt update && sudo apt install -yq doxygen
      - name: Doxygen Action
        uses: mattnotmitt/doxygen-action@v1.1.0
        with:
          working-directory: "docs"
          doxyfile-path: "Doxyfile.in"
      - working-directory: "docs/html"
        run: ls
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '14'
          working-directory: "docs/html"
      - working-directory: "docs/html"
        run: npm install
      - working-directory: "docs/html"
        run: npm start
      - working-directory: "docs/html"
        run: npm ci
      - working-directory: "docs/html"
        run: npm run build
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: "docs/html"
      - name: boost
        run: sudo apt update && sudo apt install -yq cmake libboost-all-dev
      - working-directory: ${{ env.app_dir }}
        run: ls
      - working-directory: ${{ env.app_dir }}
        run: cmake .
      - working-directory: ${{ env.app_dir }}
        run: cmake --build .
      - working-directory: ${{ env.app_dir }}
        run: cmake --build . --target test
      - working-directory: ${{ env.app_dir }}
        run: cmake --build . --target package
      - working-directory: ${{ env.app_dir }}
        run: ls
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ format('{0}_{1}', env.app_dir, github.run_number) }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.app_dir }}/${{ env.app_dir }}-0.0.${{ github.run_number }}-Linux.deb
          asset_name: ${{ env.app_dir }}-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
