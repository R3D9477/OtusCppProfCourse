name: "Homework 01 (hello world)"

on:
  push:
    branches:
      - "hw01"

env:
  app_dir: "hello_world"

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                submodules: true
            # install and cache dependencies
            - name: Cache boost
              uses: actions/cache@v1.0.3
              id: cache-boost
              with:
                path: "~/boost"
                key: libboost1.65-dev
            - name: Install boost
                env:
                    CACHE_HIT: ${{steps.cache-boost.outputs.cache-hit}}
                run: |
                    if [[ "$CACHE_HIT" == 'true' ]]; then
                        sudo cp --force --recursive ~/boost/* /
                    else
                        sudo apt-get update && sudo apt-get install -yq libboost1.65-dev
                        mkdir -p ~/boost
                        for dep in libboost1.65-dev; do
                        dpkg -L $dep | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/boost/
                        done
                    fi
            - working-directory: ${{ env.app_dir }}
                run: ls
#      - working-directory: ${{ env.app_dir }}
#        run: cmake .
#      - working-directory: ${{ env.app_dir }}
#        run: cmake --build .                  -DBoost_INCLUDE_DIR=$BOOST_ROOT_1_72_0/include
#      - working-directory: ${{ env.app_dir }}
#        run: cmake --build . --target test    -DBoost_INCLUDE_DIR=$BOOST_ROOT_1_72_0/include
#      - working-directory: ${{ env.app_dir }}
#        run: cmake --build . --target package -DBoost_INCLUDE_DIR=$BOOST_ROOT_1_72_0/include
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.run_number }}
#          release_name: Release ${{ github.run_number }}
#          draft: false
#          prerelease: false
#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ${{ env.app_dir }}/helloworld-0.0.${{ github.run_number }}-Linux.deb
#          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
#          asset_content_type: application/vnd.debian.binary-package
